{"version":3,"sources":["components/TodoListTemplate.js","components/Form.js","components/TodoItem.js","components/TodoItemList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoListTemplate","form","children","className","Form","value","onChange","onCreate","onKeyPress","onClick","TodoItem","nextProps","nextState","this","props","checked","text","id","onToggle","onRemove","console","log","e","stopPropagation","Component","TodoItemList","todos","todoList","map","App","state","input","handleChange","setState","target","handleCreate","concat","handleKeyPress","key","handleToggle","index","findIndex","todo","selected","nextTodos","handleRemove","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2397568.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./TodoListTemplate.css\";\r\n\r\nconst TodoListTemplate = ({form, children}) => {\r\n    return (\r\n        <main className=\"todo-list-template\">\r\n            <div className=\"title\">\r\n                Todo List\r\n            </div>\r\n            <section className=\"form-wrapper\">\r\n                {form}\r\n            </section>\r\n            <section className=\"todos-wrapper\">\r\n                {children}\r\n            </section>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default TodoListTemplate;\r\n","import React from \"react\";\r\nimport \"./Form.css\";\r\n\r\nconst Form = ({value, onChange, onCreate, onKeyPress}) => {\r\n    return (\r\n        <div className=\"form\">\r\n            <input value={value} onChange={onChange} onKeyPress={onKeyPress} />\r\n            <div className=\"create-button\" onClick={onCreate}>\r\n                ✨추가✨\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n","import React, {Component} from \"react\";\r\nimport \"./TodoItem.css\";\r\n\r\nclass TodoItem extends Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return this.props.checked !== nextProps.checked;\r\n    }\r\n\r\n    render() {\r\n        const {text, checked, id, onToggle, onRemove} = this.props;\r\n\r\n        console.log(id);\r\n\r\n        return (\r\n            <div className=\"todo-item\" onClick = {() => onToggle(id)}>\r\n                <div className=\"remove\" onClick = {(e) => {e.stopPropagation(); onRemove(id)}}>❌</div>\r\n                <div className={`todo-text ${checked && 'checked'}`}>\r\n                    <div>{text}</div>\r\n                </div>\r\n                {checked && (<div className=\"check-mark\">⭕</div>)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, {Component} from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nclass TodoItemList extends Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return this.props.todos !== nextProps.todos;\r\n    }\r\n\r\n    render() {\r\n        const {todos, onToggle, onRemove} = this.props;\r\n\r\n        const todoList = todos.map(\r\n            ({id, text, checked}) => (\r\n                <TodoItem key={id} id={id} text={text} checked={checked} onToggle={onToggle} onRemove={onRemove} />\r\n            )\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                {todoList}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoItemList;\r\n","import React, {Component} from \"react\";\nimport TodoListTemplate from \"./components/TodoListTemplate\";\nimport Form from \"./components/Form\";\nimport TodoItemList from \"./components/TodoItemList\";\n\nclass App extends Component {\n\tid = 0\n\t/* id = 3 //이미 0, 1, 2 가 존재하므로 3으로 설정 */\n\t\n\tstate = {\n\t\tinput: \"\",\n\t\ttodos: []\n\t\t/* todos: [\n\t\t\t{id: 0, text: ' 리액트 소개', checked: false},\n\t\t\t{id: 1, text: ' 리액트 소개', checked: true},\n\t\t\t{id: 2, text: ' 리액트 소개', checked: false}\n\t\t] */\n\t}\n\n\thandleChange = (e) => {\n\t\tthis.setState({\n\t\t\tinput: e.target.value // input이 바뀌는 값\n\t\t});\n\t}\n\n\thandleCreate = (e) => {\n\t\tconst {input, todos} = this.state;\n\t\tthis.setState({\n\t\t\tinput: \"\", // input 비우기\n\t\t\ttodos: todos.concat({ // concat을 사용하여 배열에 추가\n\t\t\t\tid: this.id++,\n\t\t\t\ttext: input,\n\t\t\t\tchecked: false\n\t\t\t})\n\t\t});\n\t}\n\n\thandleKeyPress = (e) => {\n\t\tif (e.key === \"Enter\") { // Enter을 누르면 handleCreate 호출\n\t\t\tthis.handleCreate();\n\t\t}\n\t}\n\n\thandleToggle = (id) => {\n\t\tconst {todos} = this.state;\n\t\tconst index = todos.findIndex(todo => todo.id === id); // 파라미터로 받은 id를 가지고 몇번째 아이템인지 찾습니다.\n\t\tconst selected = todos[index]; // 선택한 객체\n\t\tconst nextTodos = [...todos]; // 배열을 복사\n\n\t\tnextTodos[index] = { // 기존의 값들을 복사하고, checked 값을 엎어쓰기\n\t\t\t...selected,\n\t\t\tchecked: !selected.checked\n\t\t};\n\n\t\tthis.setState({\n\t\t\ttodos: nextTodos\n\t\t});\n\t}\n\n\thandleRemove = (id) => {\n\t\tconst {todos} = this.state;\n\t\tthis.setState({\n\t\t\ttodos: todos.filter(todo => todo.id !== id)\n\t\t});\n\t}\n\n\trender() {\n\t\tconst {input, todos} = this.state;\n\t\tconst {handleChange, handleCreate, handleKeyPress, handleToggle, handleRemove} = this;\n\t\treturn (\n\t\t\t<TodoListTemplate form={<Form value={input} onKeyPress={handleKeyPress} onChange={handleChange} onCreate={handleCreate} />}>\n\t\t\t\t<TodoItemList todos={todos} onToggle={handleToggle} onRemove={handleRemove} />\n\t\t\t</TodoListTemplate>\n\t\t)\n\t}\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}